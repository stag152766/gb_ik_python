# # 1. Удаление элемента списка во времня его итерирования
# list_1 = [1, 2, 3, 4]
# list_2 = [1, 2, 3, 4]
# list_3 = [1, 2, 3, 4]
# list_4 = [1, 2, 3, 4]
#
# """
# В данном случае на каждой итерации цикла из объекта enumerate извлекается очередной кортеж,
# состоящий из индекса очередного элемента списка и значения этого элемента.
# """
# # del разрывает связь между переменной и объектом на который она ссылается
# for i, item in enumerate(list_1):
#     del item
#
# print(list_1)
#
# for i, item in enumerate(list_2):
#     list_2.remove(item)
#
# print(list_2)
#
# """Цикл пробежал по всем элементам, но удалил только 2 и 4
# при удалении числа 1 произошло смещение указателя в цикле, поэтому следующий элемент не 2 а 3
# """
# for i, item in enumerate(list_3):
#     list_3.pop(i)
#
# print(list_3)
#
#
# for i, item in enumerate(list_4[:]):
#     list_4.remove(item)
#
# print(list_4)
# """передается не список а его срез, благодаря этому удаление происходило из основного списка а цикл двигался по его срезу (копии)"""


# # 2. Крестики-нолики, где Х побеждает с первой попытки
#
# row = ['']*3
# board = [row] *3
# board[0][0] = 'X'
#
#
# print(board)
#
# """Список имеет ссылочную структуру данных, в самом списке хранятся ссылки на объеты
# поэтому при создании доски происходит ссылка на один и тот же объект 3 раза
# нужно использовать генератор списков
# """
#
# board = [[''] * 3 for i in range(3)]
# board[0][0] = 'X'
# print(board)


# # 3. Теже операнды но другая история
# a = [1, 2, 3, 4]
# b = a
# # создается новый список, и переменная а начинает указывать на новый объект
# a = a + [5, 6, 7]
# # тут уже другой список а
# print(a, b)
#
# a = 'abc'
# b = a
# a = a + 'def'
# print(a,b)
#
#
# a = [1, 2, 3, 4]
# b = a
# # Новый объект не создавался, элементы добавились в уже существующий
# a += [5, 6, 7]
# # соответственно элементы стали ссылаться на новый список
# print(a,b)

# 4. Найдем иглу в стоге сена

# t = ('one', 'two')
#
# for i in t:
#     print(i)
#
# t = ('one')
# # python решил что хранится строка а не кортеж
# for i in t:
#     print(i)
#
# t = ('one',)
# for i in t:
#     print(i)

# # 5. Сохранить только уникальные значения
#
# lst = [1,4,1,1,4, 0,5,6,7,9,3,2]
# lst = list(set(lst))
# print(lst)

# 6. Ключ словаря  - изменяемый список

set_x = {1, 2, 3}
lst_x = [1, 4, 9]
# dic_x = {lst_x : set_x}
# dic_x = {set_x: lst_x}
# ошибка т к множество и список изменяемый объект

dic_x = {frozenset(set_x): lst_x}
dic_y = {tuple(lst_x): set_x}
